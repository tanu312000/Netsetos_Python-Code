from bisect import bisect_right as upper_bound

def findMedian(A):
    Row = len(A)
    Col = len(A[0])
    min = A[0][0]
    max = 0
    #Check first Column ,for minimum Value & for maximum value,Check in last Column as maximum value will reside in last Column
    # as Row is in Sorted Order
    for i in range(Row):
        if (A[i][0] < min):
            min = A[i][0]
        if (A[i][Col - 1] > max):
            max = A[i][Col - 1]

    desired = (Row * Col + 1) / 2
    while(min < max):
        mid = min + (max - min) // 2
        matrix = [0]

        for i in range(Row):
            j = upper_bound(A[i], mid)
            matrix[0] = matrix[0] + j
        if (matrix[0] < desired):
            min = mid + 1
        else:
            max = mid
    return min


